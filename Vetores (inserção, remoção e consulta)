#include <stdio.h>

#define MAX_SIZE 50

void imprimirVetor(int vetor[], int tamanho) {
    printf("Vetor: ");
    for (int i = 0; i < tamanho; i++) {
        printf("%d ", vetor[i]);
    }
    printf("\n");
}

int buscaBinaria(int vetor[], int tamanho, int valor) {
    int esquerda = 0, direita = tamanho - 1;
    while (esquerda <= direita) {
        int meio = (esquerda + direita) / 2;
        if (vetor[meio] == valor) {
            return meio;
        } else if (vetor[meio] < valor) {
            esquerda = meio + 1;
        } else {
            direita = meio - 1;
        }
    }
    return -1;
}

void removerElemento(int vetor[], int *tamanho, int valor) {
    int pos = buscaBinaria(vetor, *tamanho, valor);
    if (pos == -1) {
        printf("Elemento nao encontrado!\n");
        return;
    }

    for (int i = pos; i < *tamanho - 1; i++) {
        vetor[i] = vetor[i + 1];
    }
    (*tamanho)--;
    printf("Elemento removido com sucesso!\n");
}

void inserirOrdenado(int vetor[], int *tamanho, int valor) {
    if (*tamanho >= MAX_SIZE) {
        printf("Vetor cheio! Nao pode inserir mais elementos.\n");
        return;
    }

    int i = *tamanho - 1;
    while (i >= 0 && vetor[i] > valor) {
        vetor[i + 1] = vetor[i];
        i--;
    }
    vetor[i + 1] = valor;
    (*tamanho)++;
    printf("Elemento inserido com sucesso!\n");
}

int main() {
    int vetor[MAX_SIZE];
    int tamanho;

    // Solicita o tamanho do vetor ao usuário
    do {
        printf("Digite o tamanho do vetor (entre 3 e 50): ");
        scanf("%d", &tamanho);
    } while (tamanho < 3 || tamanho > MAX_SIZE);

    // Solicita os elementos do vetor ao usuário e os insere de forma ordenada
    for (int i = 0; i < tamanho; i++) {
        int valor;
        printf("Digite o valor inteiro %d: ", i + 1);
        scanf("%d", &valor);
        inserirOrdenado(vetor, &i, valor);
    }

    int opcao;
    do {
        // Menu de opções
        printf("\nMenu:\n");
        printf("1. Imprimir todo o vetor\n");
        printf("2. Consultar posicao de um elemento\n");
        printf("3. Remover um elemento\n");
        printf("4. Inserir um valor no vetor\n");
        printf("5. Sair\n");
        printf("Escolha uma opcao: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                imprimirVetor(vetor, tamanho);
                break;
            case 2: {
                int valor;
                printf("Digite o valor a ser consultado: ");
                scanf("%d", &valor);
                int pos = buscaBinaria(vetor, tamanho, valor);
                if (pos == -1) {
                    printf("Elemento nao encontrado!\n");
                } else {
                    printf("Elemento encontrado na posicao %d\n", pos);
                }
                break;
            }
            case 3: {
                int valor;
                printf("Digite o valor a ser removido: ");
                scanf("%d", &valor);
                removerElemento(vetor, &tamanho, valor);
                break;
            }
            case 4: {
                int valor;
                printf("Digite o valor a ser inserido: ");
                scanf("%d", &valor);
                inserirOrdenado(vetor, &tamanho, valor);
                break;
            }
            case 5:
                printf("Saindo...\n");
                break;
            default:
                printf("Opcao invalida!\n");
        }
    } while (opcao != 5);

    return 0;
}
